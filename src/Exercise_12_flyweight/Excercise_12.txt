EXERCISE 12

FLYWEIGHT

Nivel: 游댠游댠

Objective:
Implement Flyweight pattern according to the following statement.

Exercise:
In a business they need to create trees so they can see how much space they would take up. The program you currently have has a high consumption of resources. You need to create 1,000,000 trees. The process for creating the trees is:
 - Each tree has a Height, Width, color and type of tree.
 - The types of trees that exist are:

-- Ornamental
High: 200
Landscape: 400
color: Green

-- Fruit trees
High: 500
Landscape: 300
color: Red

-- Floral
Height: 100
Landscape: 200
color: Sky blue

The forest is a set of trees and will allow the trees to be planted. Tree Factory will be the place where the different types of trees will be stored. It will allow, before creating the object, to validate if there is already one identical to the one that is being requested. If so, return the existing object; if it doesn't exist, it creates the new object and caches it to be reused later.

You need a system that shows 1,000,000 trees, half red and half green, and then reports the trees and how much memory is being used on the screen.

Using this statement you can see the used memory:
Runtime runtime = Runtime.getRuntime();
System.out.println("Memoria usada: " + (runtime.totalMemory() -runtime.freeMemory()) / (1024 * 1024));


//SPANISH


Objetivo:
Implementar patr칩n Flyweight seg칰n el siguiente enunciado.

Actividad:
En un negocio necesitan crear 치rboles para poder ver cu치nto lugar ocupar칤an. El programa que tiene actualmente posee un elevado consumo de los recursos. Necesita crear 1.000.000 치rboles. El proceso para crear los 치rboles es:
 - Cada 치rbol tiene un Alto, Ancho, color y tipo de 치rbol.
 - Los tipos de 치rboles que hay son:

-- Ornamentales
Alto: 200
Horizontal: 400
Color: verde

-- Frutales
Alto: 500
Horizontal: 300
Color: rojo

-- Florales
Alto: 100
Horizontal: 200
Color: celeste

El bosque es un con junto de 치rboles y permitir치 plantar los 치rboles. 츼rbol Factory ser치 el lugar donde se almacenar치n los diferentes tipos de 치rboles. Permitir치, antes de crear el objeto, validar si ya existe uno id칠ntico al que se le est치 solicitando. De ser as칤, regresa el objeto existente; de no existir, crea el nuevo objeto y lo almacena en cach칠 para ser reutilizado m치s adelante.

Se necesita un sistema que muestre 1.000.000 de 치rboles la mitad rojo y la otra mitad verde y que luego informe por pantalla los 치rboles y cuanta memoria se est치 usando.

Usando esta sentencia se podr치 ver la memoria usada:
Runtime runtime = Runtime.getRuntime();
System.out.println("Memoria usada: " + (runtime.totalMemory() -runtime.freeMemory()) / (1024 * 1024));